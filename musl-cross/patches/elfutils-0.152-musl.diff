diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -13,6 +13,10 @@
 
 	* configure.ac (LOCALEDIR, DATADIRNAME): Removed.
 
+2009-11-22  Roland McGrath  <roland@redhat.com>
+
+	* configure.ac: Use sed and expr instead of modern bash extensions.
+
 2009-09-21  Ulrich Drepper  <drepper@redhat.com>
 
 	* configure.ac: Update for more modern autoconf.
@@ -21,6 +25,10 @@
 
 	* configure.ac (zip_LIBS): Check for liblzma too.
 
+2009-08-17  Roland McGrath  <roland@redhat.com>
+
+	* configure.ac: Check for -fgnu89-inline; add it to WEXTRA if it works.
+
 2009-04-19  Roland McGrath  <roland@redhat.com>
 
 	* configure.ac (eu_version): Round down here, not in version.h macros.
@@ -32,6 +40,8 @@
 
 2009-01-23  Roland McGrath  <roland@redhat.com>
 
+	* configure.ac: Check for __builtin_popcount.
+
 	* configure.ac (zlib check): Check for gzdirect, need zlib >= 1.2.2.3.
 
 	* configure.ac (__thread check): Use AC_LINK_IFELSE, in case of
@@ -112,6 +122,10 @@
 	* configure.ac: Add dummy automake conditional to get dependencies
 	for non-generic linker right.  See src/Makefile.am.
 
+2005-11-22  Roland McGrath  <roland@redhat.com>
+
+	* configure.ac: Check for --as-needed linker option.
+
 2005-11-18  Roland McGrath  <roland@redhat.com>
 
 	* Makefile.am (DISTCHECK_CONFIGURE_FLAGS): New variable.
@@ -159,6 +173,17 @@
 	* Makefile.am (all_SUBDIRS): Add libdwfl.
 	* configure.ac: Write libdwfl/Makefile.
 
+2005-05-31  Roland McGrath  <roland@redhat.com>
+
+	* configure.ac (WEXTRA): Check for -Wextra and set this substitution.
+
+	* configure.ac: Check for struct stat st_?tim members.
+	* src/strip.c (process_file): Use st_?time if st_?tim are not there.
+
+	* configure.ac: Check for futimes function.
+	* src/strip.c (handle_elf) [! HAVE_FUTIMES]: Use utimes instead.
+	(handle_ar) [! HAVE_FUTIMES]: Likewise.
+
 2005-05-19  Roland McGrath  <roland@redhat.com>
 
 	* configure.ac [AH_BOTTOM] (INTDECL, _INTDECL): New macros.
diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -30,8 +30,9 @@
 pkginclude_HEADERS = version.h
 
 # Add doc back when we have some real content.
-SUBDIRS = config m4 lib libelf libebl libdwfl libdw libcpu libasm backends \
-	  src po tests
+#SUBDIRS = config m4 lib libelf libebl libdwfl libdw libcpu libasm backends \
+#	  src po tests
+SUBDIRS = libelf
 
 EXTRA_DIST = elfutils.spec GPG-KEY NOTES EXCEPTION
 
diff --git a/Makefile.in b/Makefile.in
--- a/Makefile.in
+++ b/Makefile.in
@@ -155,6 +155,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -184,6 +185,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -246,8 +248,9 @@
 pkginclude_HEADERS = version.h
 
 # Add doc back when we have some real content.
-SUBDIRS = config m4 lib libelf libebl libdwfl libdw libcpu libasm backends \
-	  src po tests
+#SUBDIRS = config m4 lib libelf libebl libdwfl libdw libcpu libasm backends \
+#	  src po tests
+SUBDIRS = libelf
 
 EXTRA_DIST = elfutils.spec GPG-KEY NOTES EXCEPTION
 
diff --git a/backends/ChangeLog b/backends/ChangeLog
--- a/backends/ChangeLog
+++ b/backends/ChangeLog
@@ -111,6 +111,10 @@
 	* ppc_attrs.c (ppc_check_object_attribute): Handle tag
 	GNU_Power_ABI_Struct_Return.
 
+2009-01-23  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (libebl_%.so): Use $(LD_AS_NEEDED).
+
 2008-10-04  Ulrich Drepper  <drepper@redhat.com>
 
 	* i386_reloc.def: Fix entries for TLS_GOTDESC, TLS_DESC_CALL, and
@@ -438,6 +442,11 @@
 	* sparc_init.c: Likewise.
 	* x86_64_init.c: Likewise.
 
+2005-11-22  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (LD_AS_NEEDED): New variable, substituted by configure.
+	(libebl_%.so rule): Use it in place of -Wl,--as-needed.
+
 2005-11-19  Roland McGrath  <roland@redhat.com>
 
 	* ppc64_reloc.def: REL30 -> ADDR30.
@@ -460,6 +469,9 @@
 	* Makefile.am (uninstall): Don't try to remove $(pkgincludedir).
 	(CLEANFILES): Add libebl_$(m).so.
 
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
 	* ppc_reloc.def: Update bits per Alan Modra <amodra@bigpond.net.au>.
 	* ppc64_reloc.def: Likewise.
 
diff --git a/backends/Makefile.am b/backends/Makefile.am
--- a/backends/Makefile.am
+++ b/backends/Makefile.am
@@ -103,7 +103,7 @@
 	$(LINK) -shared -o $(@:.map=.so) \
 		-Wl,--whole-archive $< $(cpu_$*) -Wl,--no-whole-archive \
 		-Wl,--version-script,$(@:.so=.map) \
-		-Wl,-z,defs -Wl,--as-needed $(libelf) $(libdw) $(libmudflap)
+		-Wl,-z,defs $(LD_AS_NEEDED) $(libelf) $(libdw) $(libmudflap)
 	$(textrel_check)
 
 libebl_i386.so: $(cpu_i386)
diff --git a/backends/Makefile.in b/backends/Makefile.in
--- a/backends/Makefile.in
+++ b/backends/Makefile.in
@@ -165,6 +165,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -194,6 +195,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -256,8 +258,8 @@
 	-I$(top_srcdir)/libebl -I$(top_srcdir)/libasm \
 	-I$(top_srcdir)/libelf -I$(top_srcdir)/libdw
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1)
 @MUDFLAP_FALSE@libmudflap = 
@@ -698,7 +700,7 @@
 	$(LINK) -shared -o $(@:.map=.so) \
 		-Wl,--whole-archive $< $(cpu_$*) -Wl,--no-whole-archive \
 		-Wl,--version-script,$(@:.so=.map) \
-		-Wl,-z,defs -Wl,--as-needed $(libelf) $(libdw) $(libmudflap)
+		-Wl,-z,defs $(LD_AS_NEEDED) $(libelf) $(libdw) $(libmudflap)
 	$(textrel_check)
 
 libebl_i386.so: $(cpu_i386)
diff --git a/config.h.in b/config.h.in
--- a/config.h.in
+++ b/config.h.in
@@ -1,5 +1,8 @@
 /* config.h.in.  Generated from configure.ac by autoheader.  */
 
+/* Have __builtin_popcount. */
+#undef HAVE_BUILTIN_POPCOUNT
+
 /* $libdir subdirectory containing libebl modules. */
 #undef LIBEBL_SUBDIR
 
@@ -55,4 +58,7 @@
 /* Define for large files, on AIX-style hosts. */
 #undef _LARGE_FILES
 
+/* Stubbed out if missing compiler support. */
+#undef __thread
+
 #include <eu-config.h>
diff --git a/config/Makefile.in b/config/Makefile.in
--- a/config/Makefile.in
+++ b/config/Makefile.in
@@ -76,6 +76,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -105,6 +106,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
diff --git a/config/eu.am b/config/eu.am
--- a/config/eu.am
+++ b/config/eu.am
@@ -25,11 +25,14 @@
 ## <http://www.openinventionnetwork.com>.
 ##
 
+WEXTRA = @WEXTRA@
+LD_AS_NEEDED = @LD_AS_NEEDED@
+
 DEFS = -D_GNU_SOURCE -DHAVE_CONFIG_H -DLOCALEDIR='"${localedir}"'
 INCLUDES = -I. -I$(srcdir) -I$(top_srcdir)/lib -I..
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow \
 	    $(if $($(*F)_no_Werror),,-Werror) \
-	    $(if $($(*F)_no_Wunused),,-Wunused -Wextra) \
+	    $(if $($(*F)_no_Wunused),,-Wunused $(WEXTRA)) \
 	    $(if $($(*F)_no_Wformat),-Wno-format,-Wformat=2) \
 	    $($(*F)_CFLAGS)
 
diff --git a/configure b/configure
--- a/configure
+++ b/configure
@@ -602,6 +602,8 @@
 base_cpu
 NATIVE_LD_FALSE
 NATIVE_LD_TRUE
+LD_AS_NEEDED
+WEXTRA
 LEXLIB
 LEX_OUTPUT_ROOT
 LEX
@@ -3856,6 +3858,130 @@
   as_fn_error $? "gcc with C99 support required" "$LINENO" 5
 fi
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for -Wextra option to $CC" >&5
+$as_echo_n "checking for -Wextra option to $CC... " >&6; }
+if test "${ac_cv_cc_wextra+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  old_CFLAGS="$CFLAGS"
+CFLAGS="$CFLAGS -Wextra"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+void foo (void) { }
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_cc_wextra=yes
+else
+  ac_cv_cc_wextra=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+CFLAGS="$old_CFLAGS"
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_cc_wextra" >&5
+$as_echo "$ac_cv_cc_wextra" >&6; }
+
+if test "x$ac_cv_cc_wextra" = xyes; then :
+  WEXTRA=-Wextra
+else
+  WEXTRA=-W
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for -fgnu89-inline option to $CC" >&5
+$as_echo_n "checking for -fgnu89-inline option to $CC... " >&6; }
+if test "${ac_cv_cc_gnu89_inline+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  old_CFLAGS="$CFLAGS"
+CFLAGS="$CFLAGS -fgnu89-inline -Werror"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+void foo (void)
+{
+  inline void bar (void) {}
+  bar ();
+}
+extern inline void baz (void) {}
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_cc_gnu89_inline=yes
+else
+  ac_cv_cc_gnu89_inline=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+CFLAGS="$old_CFLAGS"
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_cc_gnu89_inline" >&5
+$as_echo "$ac_cv_cc_gnu89_inline" >&6; }
+if test "x$ac_cv_cc_gnu89_inline" = xyes; then :
+  WEXTRA="${WEXTRA:+$WEXTRA }-fgnu89-inline"
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for --as-needed linker option" >&5
+$as_echo_n "checking for --as-needed linker option... " >&6; }
+if test "${ac_cv_as_needed+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat > conftest.c <<EOF
+int main (void) { return 0; }
+EOF
+if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS
+			    -fPIC -shared -o conftest.so conftest.c
+			    -Wl,--as-needed 1>&5'
+  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }
+then
+  ac_cv_as_needed=yes
+else
+  ac_cv_as_needed=no
+fi
+rm -f conftest*
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_as_needed" >&5
+$as_echo "$ac_cv_as_needed" >&6; }
+if test "x$ac_cv_as_needed" = xyes; then :
+  LD_AS_NEEDED=-Wl,--as-needed
+else
+  LD_AS_NEEDED=
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for __builtin_popcount" >&5
+$as_echo_n "checking for __builtin_popcount... " >&6; }
+if test "${ac_cv_popcount+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+exit (__builtin_popcount (127));
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_popcount=yes
+else
+  ac_cv_popcount=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_popcount" >&5
+$as_echo "$ac_cv_popcount" >&6; }
+if test "x$ac_cv_popcount" = xyes; then :
+
+$as_echo "#define HAVE_BUILTIN_POPCOUNT 1" >>confdefs.h
+
+fi
+
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for __thread support" >&5
 $as_echo_n "checking for __thread support... " >&6; }
 if test "${ac_cv_tls+set}" = set; then :
@@ -3892,7 +4018,13 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_tls" >&5
 $as_echo "$ac_cv_tls" >&6; }
 if test "x$ac_cv_tls" != xyes; then :
-  as_fn_error $? "__thread support required" "$LINENO" 5
+  if test "$use_locks" = yes; then :
+  as_fn_error $? "--enable-thread-safety requires __thread support" "$LINENO" 5
+else
+
+$as_echo "#define __thread /* empty: no multi-thread support */" >>confdefs.h
+
+fi
 fi
 
 # Check whether --enable-largefile was given.
@@ -4878,7 +5010,7 @@
 
 # 1.234<whatever> -> 1234<whatever>
 case "$PACKAGE_VERSION" in
-[0-9].*) eu_version="${PACKAGE_VERSION/./}" ;;
+[0-9].*) eu_version=`echo "$PACKAGE_VERSION" | sed 's@\.@@'` ;;
 *)     	   as_fn_error $? "confused by version number '$PACKAGE_VERSION'" "$LINENO" 5 ;;
 esac
 case "$eu_version" in
@@ -4907,7 +5039,7 @@
 esac
 
 # Round up to the next release API (x.y) version.
-eu_version=$[($eu_version + 999) / 1000]
+eu_version=`expr \( $eu_version + 999 \) / 1000`
 
 cat >confcache <<\_ACEOF
 # This file is a shell script that caches the results of configure
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -70,6 +70,54 @@
 AS_IF([test "x$ac_cv_c99" != xyes],
       AC_MSG_ERROR([gcc with C99 support required]))
 
+AC_CACHE_CHECK([for -Wextra option to $CC], ac_cv_cc_wextra, [dnl
+old_CFLAGS="$CFLAGS"
+CFLAGS="$CFLAGS -Wextra"
+AC_COMPILE_IFELSE([void foo (void) { }],
+		  ac_cv_cc_wextra=yes, ac_cv_cc_wextra=no)
+CFLAGS="$old_CFLAGS"])
+AC_SUBST(WEXTRA)
+AS_IF([test "x$ac_cv_cc_wextra" = xyes], [WEXTRA=-Wextra], [WEXTRA=-W])
+
+AC_CACHE_CHECK([for -fgnu89-inline option to $CC], ac_cv_cc_gnu89_inline, [dnl
+old_CFLAGS="$CFLAGS"
+CFLAGS="$CFLAGS -fgnu89-inline -Werror"
+AC_COMPILE_IFELSE([
+void foo (void)
+{
+  inline void bar (void) {}
+  bar ();
+}
+extern inline void baz (void) {}
+], ac_cv_cc_gnu89_inline=yes, ac_cv_cc_gnu89_inline=no)
+CFLAGS="$old_CFLAGS"])
+AS_IF([test "x$ac_cv_cc_gnu89_inline" = xyes],
+      [WEXTRA="${WEXTRA:+$WEXTRA }-fgnu89-inline"])
+
+AC_CACHE_CHECK([for --as-needed linker option],
+	       ac_cv_as_needed, [dnl
+cat > conftest.c <<EOF
+int main (void) { return 0; }
+EOF
+if AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS
+			    -fPIC -shared -o conftest.so conftest.c
+			    -Wl,--as-needed 1>&AS_MESSAGE_LOG_FD])
+then
+  ac_cv_as_needed=yes
+else
+  ac_cv_as_needed=no
+fi
+rm -f conftest*])
+AS_IF([test "x$ac_cv_as_needed" = xyes],
+      [LD_AS_NEEDED=-Wl,--as-needed], [LD_AS_NEEDED=])
+AC_SUBST(LD_AS_NEEDED)
+
+AC_CACHE_CHECK([for __builtin_popcount], ac_cv_popcount, [dnl
+AC_LINK_IFELSE([AC_LANG_PROGRAM([], [[exit (__builtin_popcount (127));]])],
+	       ac_cv_popcount=yes, ac_cv_popcount=no)])
+AS_IF([test "x$ac_cv_popcount" = xyes],
+      [AC_DEFINE([HAVE_BUILTIN_POPCOUNT], [1], [Have __builtin_popcount.])])
+
 AC_CACHE_CHECK([for __thread support], ac_cv_tls, [dnl
 # Use the same flags that we use for our DSOs, so the test is representative.
 # Some old compiler/linker/libc combinations fail some ways and not others.
@@ -85,7 +133,10 @@
 CFLAGS="$save_CFLAGS"
 LDFLAGS="$save_LDFLAGS"])
 AS_IF([test "x$ac_cv_tls" != xyes],
-      AC_MSG_ERROR([__thread support required]))
+      [AS_IF([test "$use_locks" = yes],
+	     [AC_MSG_ERROR([--enable-thread-safety requires __thread support])],
+	     [AC_DEFINE([__thread], [/* empty: no multi-thread support */],
+			[Stubbed out if missing compiler support.])])])
 
 dnl This test must come as early as possible after the compiler configuration
 dnl tests, because the choice of the file model can (in principle) affect
@@ -248,7 +299,7 @@
 
 # 1.234<whatever> -> 1234<whatever>
 case "$PACKAGE_VERSION" in
-[[0-9]].*) eu_version="${PACKAGE_VERSION/./}" ;;
+[[0-9]].*) eu_version=`echo "$PACKAGE_VERSION" | sed 's@\.@@'` ;;
 *)     	   AC_MSG_ERROR([confused by version number '$PACKAGE_VERSION']) ;;
 esac
 case "$eu_version" in
@@ -277,6 +328,6 @@
 esac
 
 # Round up to the next release API (x.y) version.
-[eu_version=$[($eu_version + 999) / 1000]]
+eu_version=`expr \( $eu_version + 999 \) / 1000`
 
 AC_OUTPUT
diff --git a/lib/ChangeLog b/lib/ChangeLog
--- a/lib/ChangeLog
+++ b/lib/ChangeLog
@@ -14,6 +14,9 @@
 
 2009-01-23  Roland McGrath  <roland@redhat.com>
 
+	* eu-config.h [! HAVE_BUILTIN_POPCOUNT]
+	(__builtin_popcount): New inline function.
+
 	* eu-config.h: Add multiple inclusion protection.
 
 2009-01-17  Ulrich Drepper  <drepper@redhat.com>
@@ -70,6 +73,11 @@
 	* Makefile.am (libeu_a_SOURCES): Add it.
 	* system.h: Declare crc32_file.
 
+2005-02-07  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
 2005-04-30  Ulrich Drepper  <drepper@redhat.com>
 
 	* Makefile.am: Use -ffunction-sections for xmalloc.c.
diff --git a/lib/Makefile.in b/lib/Makefile.in
--- a/lib/Makefile.in
+++ b/lib/Makefile.in
@@ -99,6 +99,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -128,6 +129,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -189,8 +191,8 @@
 INCLUDES = -I. -I$(srcdir) -I$(top_srcdir)/lib -I.. \
 	-I$(srcdir)/../libelf
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1) -fpic
 @MUDFLAP_FALSE@libmudflap = 
diff --git a/lib/eu-config.h b/lib/eu-config.h
--- a/lib/eu-config.h
+++ b/lib/eu-config.h
@@ -182,6 +182,17 @@
 /* This macro is used by the tests conditionalize for standalone building.  */
 #define ELFUTILS_HEADER(name) <lib##name.h>
 
+#ifndef HAVE_BUILTIN_POPCOUNT
+# define __builtin_popcount hakmem_popcount
+static inline unsigned int __attribute__ ((unused))
+hakmem_popcount (unsigned int x)
+{
+  /* HAKMEM 169 */
+  unsigned int n = x - ((x >> 1) & 033333333333) - ((x >> 2) & 011111111111);
+  return ((n + (n >> 3)) & 030707070707) % 63;
+}
+#endif	/* HAVE_BUILTIN_POPCOUNT */
+
 
 #ifdef SHARED
 # define OLD_VERSION(name, version) \
diff --git a/lib/fixedsizehash.h b/lib/fixedsizehash.h
--- a/lib/fixedsizehash.h
+++ b/lib/fixedsizehash.h
@@ -51,12 +51,12 @@
 #include <errno.h>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/param.h>
 
 #include <system.h>
 
-#define CONCAT(t1,t2) __CONCAT (t1,t2)
+#define CONCAT1(x,y) x##y
+#define CONCAT(x,y) CONCAT1(x,y)
 
 /* Before including this file the following macros must be defined:
 
diff --git a/lib/system.h b/lib/system.h
--- a/lib/system.h
+++ b/lib/system.h
@@ -46,6 +46,11 @@
    Network licensing program, please visit www.openinventionnetwork.com
    <http://www.openinventionnetwork.com>.  */
 
+#ifndef TEMP_FAILURE_RETRY
+#define TEMP_FAILURE_RETRY(x) x
+#define rawmemchr(s,c) memchr((s),(size_t)-1,(c))
+#endif
+
 #ifndef LIB_SYSTEM_H
 #define LIB_SYSTEM_H	1
 
diff --git a/lib/xmalloc.c b/lib/xmalloc.c
--- a/lib/xmalloc.c
+++ b/lib/xmalloc.c
@@ -27,7 +27,7 @@
 # include <config.h>
 #endif
 
-#include <error.h>
+#include <err.h>
 #include <libintl.h>
 #include <stddef.h>
 #include <stdlib.h>
@@ -48,7 +48,7 @@
 
   p = malloc (n);
   if (p == NULL)
-    error (EXIT_FAILURE, 0, _("memory exhausted"));
+    err (EXIT_FAILURE, _("memory exhausted"));
   return p;
 }
 
@@ -62,7 +62,7 @@
 
   p = calloc (n, s);
   if (p == NULL)
-    error (EXIT_FAILURE, 0, _("memory exhausted"));
+    err (EXIT_FAILURE, _("memory exhausted"));
   return p;
 }
 
@@ -76,6 +76,6 @@
 {
   p = realloc (p, n);
   if (p == NULL)
-    error (EXIT_FAILURE, 0, _("memory exhausted"));
+    err (EXIT_FAILURE, _("memory exhausted"));
   return p;
 }
diff --git a/libasm/ChangeLog b/libasm/ChangeLog
--- a/libasm/ChangeLog
+++ b/libasm/ChangeLog
@@ -71,6 +71,11 @@
 	* asm_error.c: Add new error ASM_E_IOERROR.
 	* libasmP.h: Add ASM_E_IOERROR definition.
 
+2005-05-31  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
 2005-02-15  Ulrich Drepper  <drepper@redhat.com>
 
 	* Makefile.am (AM_CFLAGS): Add -Wunused -Wextra -Wformat=2.
diff --git a/libasm/Makefile.in b/libasm/Makefile.in
--- a/libasm/Makefile.in
+++ b/libasm/Makefile.in
@@ -147,6 +147,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -176,6 +177,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = 1
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -238,8 +240,8 @@
 	-I$(top_srcdir)/libelf -I$(top_srcdir)/libebl \
 	-I$(top_srcdir)/libdw
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1)
 @MUDFLAP_FALSE@libmudflap = 
diff --git a/libcpu/ChangeLog b/libcpu/ChangeLog
--- a/libcpu/ChangeLog
+++ b/libcpu/ChangeLog
@@ -15,6 +15,9 @@
 
 2009-01-23  Roland McGrath  <roland@redhat.com>
 
+	* i386_disasm.c (i386_disasm): Add abort after assert-constant for old
+	compilers that don't realize it's noreturn.
+
 	* Makefile.am (i386_parse_CFLAGS): Use quotes around command
 	substitution that can produce leading whitespace.
 
@@ -344,6 +347,11 @@
 	* defs/i386.doc: New file.
 	* defs/x86_64: New file.
 
+2005-04-04  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it instead of -Wextra.
+
 2005-02-15  Ulrich Drepper  <drepper@redhat.com>
 
 	* Makefile (AM_CFLAGS): Add -Wunused -Wextra -Wformat=2.
diff --git a/libcpu/Makefile.in b/libcpu/Makefile.in
--- a/libcpu/Makefile.in
+++ b/libcpu/Makefile.in
@@ -116,6 +116,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = lex.$(<F:lex.l=)
@@ -145,6 +146,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -207,8 +209,8 @@
 	-I$(srcdir)/../libelf -I$(srcdir)/../libebl \
 	-I$(srcdir)/../libdw -I$(srcdir)/../libasm
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1) -fpic -fdollars-in-identifiers
 @MUDFLAP_FALSE@libmudflap = 
diff --git a/libcpu/i386_disasm.c b/libcpu/i386_disasm.c
--- a/libcpu/i386_disasm.c
+++ b/libcpu/i386_disasm.c
@@ -791,6 +791,7 @@
 
 			default:
 			  assert (! "INVALID not handled");
+			  abort ();
 			}
 		    }
 		  else
diff --git a/libcpu/i386_gendis.c b/libcpu/i386_gendis.c
--- a/libcpu/i386_gendis.c
+++ b/libcpu/i386_gendis.c
@@ -28,7 +28,7 @@
 # include <config.h>
 #endif
 
-#include <error.h>
+#include <err.h>
 #include <errno.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -48,9 +48,12 @@
 main (int argc, char *argv[argc])
 {
   outfile = stdout;
+  int count = 0;
 
-  if (argc == 1)
-    error (EXIT_FAILURE, 0, "usage: %s <MNEDEFFILE>", argv[0]);
+  if (argc == 1) {
+    err (EXIT_FAILURE, "usage: %s <MNEDEFFILE>", argv[0]);
+    count++;
+  }
 
   //i386_debug = 1;
   infname = argv[1];
@@ -59,11 +62,13 @@
   else
     {
       i386_in = fopen (infname, "r");
-      if (i386_in == NULL)
-	error (EXIT_FAILURE, errno, "cannot open %s", argv[1]);
+      if (i386_in == NULL) {
+	err (EXIT_FAILURE, "cannot open %s", argv[1]);
+        count++;
+      }
     }
 
   i386_parse ();
 
-  return error_message_count != 0;
+  return count != 0;
 }
diff --git a/libcpu/i386_lex.c b/libcpu/i386_lex.c
--- a/libcpu/i386_lex.c
+++ b/libcpu/i386_lex.c
@@ -567,7 +567,7 @@
 #endif
 
 #include <ctype.h>
-#include <error.h>
+#include <err.h>
 #include <libintl.h>
 
 #include <system.h>
@@ -1999,7 +1999,7 @@
 static void
 invalid_char (int ch)
 {
-  error (0, 0, (isascii (ch)
+  err (0, (isascii (ch)
 		? gettext ("invalid character '%c' at line %d; ignored")
 		: gettext ("invalid character '\\%o' at line %d; ignored")),
 	 ch, i386_lineno);
diff --git a/libcpu/i386_lex.l b/libcpu/i386_lex.l
--- a/libcpu/i386_lex.l
+++ b/libcpu/i386_lex.l
@@ -28,7 +28,7 @@
 #endif
 
 #include <ctype.h>
-#include <error.h>
+#include <err.h>
 #include <libintl.h>
 
 #include <system.h>
@@ -115,7 +115,7 @@
 static void
 invalid_char (int ch)
 {
-  error (0, 0, (isascii (ch)
+  err (0, (isascii (ch)
 		? gettext ("invalid character '%c' at line %d; ignored")
 		: gettext ("invalid character '\\%o' at line %d; ignored")),
 	 ch, yylineno);
diff --git a/libcpu/i386_parse.c b/libcpu/i386_parse.c
--- a/libcpu/i386_parse.c
+++ b/libcpu/i386_parse.c
@@ -109,7 +109,7 @@
 #include <assert.h>
 #include <ctype.h>
 #include <errno.h>
-#include <error.h>
+#include <err.h>
 #include <inttypes.h>
 #include <libintl.h>
 #include <math.h>
@@ -1607,9 +1607,6 @@
 /* Line 1464 of yacc.c  */
 #line 245 "i386_parse.y"
     {
-		      if (error_message_count != 0)
-			error (EXIT_FAILURE, 0,
-			       "terminated due to previous error");
 
 		      instrtable_out ();
 		    }
@@ -1645,11 +1642,11 @@
 		      newp->from = (yyvsp[(2) - (3)].str);
 		      newp->to = (yyvsp[(3) - (3)].str);
 		      if (tfind (newp, &synonyms, compare_syn) != NULL)
-			error (0, 0,
+			err (0,
 			       "%d: duplicate definition for synonym '%s'",
 			       i386_lineno, (yyvsp[(2) - (3)].str));
 		      else if (tsearch ( newp, &synonyms, compare_syn) == NULL)
-			error (EXIT_FAILURE, 0, "tsearch");
+			err (EXIT_FAILURE, "tsearch");
 		    }
     break;
 
@@ -1661,7 +1658,7 @@
 		      if ((yyvsp[(3) - (6)].field) != NULL && strcmp ((yyvsp[(3) - (6)].field)->name, "RE") != 0
 			  && strcmp ((yyvsp[(3) - (6)].field)->name, "R") != 0)
 			{
-			  error (0, 0, "%d: only 'R' and 'RE' prefix allowed",
+			  err (0, "%d: only 'R' and 'RE' prefix allowed",
 				 i386_lineno - 1);
 			}
 		      if (check_duplicates ((yyvsp[(1) - (6)].bit)) == 0
@@ -1686,7 +1683,7 @@
 			    {
 			      if (tsearch ((yyvsp[(4) - (6)].str), &mnemonics,
 					   (comparison_fn_t) strcmp) == NULL)
-				error (EXIT_FAILURE, errno, "tsearch");
+				err (EXIT_FAILURE, "tsearch");
 			      ++nmnemonics;
 			    }
 
@@ -1707,7 +1704,7 @@
 			      else if (strcmp ((yyvsp[(5) - (6)].field)->name, "D") == 0)
 				newp->suffix = suffix_D;
 			      else
-				error (EXIT_FAILURE, 0,
+				err (EXIT_FAILURE,
 				       "%s: %d: unknown suffix '%s'",
 				       infname, i386_lineno - 1, (yyvsp[(5) - (6)].field)->name);
 
@@ -1720,7 +1717,7 @@
 				  ns->idx = ++nsuffixes;
 				  if (tsearch (ns, &suffixes, compare_suf)
 				      == NULL)
-				    error (EXIT_FAILURE, errno, "tsearch");
+				    err (EXIT_FAILURE, "tsearch");
 				}
 			    }
 
@@ -1752,7 +1749,7 @@
 		      res = tfind (&search, &bitfields, bitfield_compare);
 		      if (res == NULL)
 			{
-			  error (0, 0, "%d: unknown bitfield '%s'",
+			  err (0, "%d: unknown bitfield '%s'",
 				 i386_lineno, search.name);
 			  (yyval.field) = NULL;
 			}
@@ -1849,7 +1846,7 @@
 		      res = tfind (&search, &bitfields, bitfield_compare);
 		      if (res == NULL)
 			{
-			  error (0, 0, "%d: unknown bitfield '%s'",
+			  err (0, "%d: unknown bitfield '%s'",
 				 i386_lineno, search.name);
 			  (yyval.bit)->type = failure;
 			}
@@ -1949,7 +1946,7 @@
 			    (yyval.name)->field = &bx_reg;
 			  else
 			    {
-			      error (0, 0, "%d: unknown bitfield '%s'",
+			      err (0, "%d: unknown bitfield '%s'",
 				     i386_lineno, search.name);
 			      (yyval.name)->field = NULL;
 			    }
@@ -2220,7 +2217,7 @@
 static void
 yyerror (const char *s)
 {
-  error (0, 0, gettext ("while reading i386 CPU description: %s at line %d"),
+  err (0, gettext ("while reading i386 CPU description: %s at line %d"),
          gettext (s), i386_lineno);
 }
 
@@ -2245,14 +2242,14 @@
 
   if (tfind (newp, &bitfields, bitfield_compare) != NULL)
     {
-      error (0, 0, "%d: duplicated definition of bitfield '%s'",
+      err (0, "%d: duplicated definition of bitfield '%s'",
 	     i386_lineno, name);
       free (name);
       return;
     }
 
   if (tsearch (newp, &bitfields, bitfield_compare) == NULL)
-    error (EXIT_FAILURE, errno, "%d: cannot insert new bitfield '%s'",
+    err (EXIT_FAILURE, "%d: cannot insert new bitfield '%s'",
 	   i386_lineno, name);
 }
 
@@ -2292,7 +2289,7 @@
 	}
       obstack_1grow (&os, '\0');
 
-      error (0, 0, "%d: field '%s' not a multiple of 8 bits in size",
+      err (0, "%d: field '%s' not a multiple of 8 bits in size",
 	     i386_lineno, (char *) obstack_finish (&os));
 
       obstack_free (&os, NULL);
@@ -2313,7 +2310,7 @@
 	{
 	  if (val->field->tmp == testcnt)
 	    {
-	      error (0, 0, "%d: bitfield '%s' used more than once",
+	      err (0, "%d: bitfield '%s' used more than once",
 		     i386_lineno - 1, val->field->name);
 	      result = 1;
 	    }
@@ -2350,7 +2347,7 @@
 
 	    if (runp == NULL)
 	      {
-		error (0, 0, "%d: unknown bitfield '%s' used in output format",
+		err (0, "%d: unknown bitfield '%s' used in output format",
 		       i386_lineno - 1, name->field->name);
 		result = 1;
 	      }
@@ -2394,7 +2391,7 @@
 #if 0
 	  if (runp == NULL)
 	    {
-	      error (0, 0, "%d: bitfield '%s' not used",
+	      err (0, "%d: bitfield '%s' not used",
 		     i386_lineno - 1, bitval->field->name);
 	      result = 1;
 	    }
@@ -2457,7 +2454,7 @@
       if (runp->type == string)
 	{
 	  if (instr->operands[n].str != NULL)
-	    error (EXIT_FAILURE, 0,
+	    err (EXIT_FAILURE,
 		   "%d: cannot have more than one string parameter",
 		   i386_lineno - 1);
 
@@ -2511,7 +2508,7 @@
 	  else if (instr->operands[n].off3 == 0)
 	    instr->operands[n].off3 = bitoff;
 	  else
-	    error (EXIT_FAILURE, 0,
+	    err (EXIT_FAILURE,
 		   "%d: cannot have more than three fields in parameter",
 		   i386_lineno - 1);
 
@@ -2587,7 +2584,7 @@
 		newp->str = runp->operands[i].fct;
 		newp->idx = 0;
 		if (tsearch (newp, &fct_names[i], compare_argstring) == NULL)
-		  error (EXIT_FAILURE, errno, "tsearch");
+		  err (EXIT_FAILURE, "tsearch");
 		++nfct_names[i];
 	      }
 
@@ -2600,7 +2597,7 @@
 		    newp->str = runp->operands[i].str;
 		    newp->idx = 0;
 		    if (tsearch (newp, &strs[i], compare_argstring) == NULL)
-		      error (EXIT_FAILURE, errno, "tsearch");
+		      err (EXIT_FAILURE, "tsearch");
 		    ++nstrs[i];
 		  }
 	      }
diff --git a/libcpu/i386_parse.y b/libcpu/i386_parse.y
--- a/libcpu/i386_parse.y
+++ b/libcpu/i386_parse.y
@@ -31,7 +31,7 @@
 #include <assert.h>
 #include <ctype.h>
 #include <errno.h>
-#include <error.h>
+#include <err.h>
 #include <inttypes.h>
 #include <libintl.h>
 #include <math.h>
@@ -243,10 +243,6 @@
 
 spec:		  masks kPERCPERC '\n' instrs
 		    {
-		      if (error_message_count != 0)
-			error (EXIT_FAILURE, 0,
-			       "terminated due to previous error");
-
 		      instrtable_out ();
 		    }
 		;
@@ -267,11 +263,11 @@
 		      newp->from = $2;
 		      newp->to = $3;
 		      if (tfind (newp, &synonyms, compare_syn) != NULL)
-			error (0, 0,
+			err (0, 0,
 			       "%d: duplicate definition for synonym '%s'",
 			       i386_lineno, $2);
 		      else if (tsearch ( newp, &synonyms, compare_syn) == NULL)
-			error (EXIT_FAILURE, 0, "tsearch");
+			err (EXIT_FAILURE, "tsearch");
 		    }
 		|
 		;
@@ -285,7 +281,7 @@
 		      if ($3 != NULL && strcmp ($3->name, "RE") != 0
 			  && strcmp ($3->name, "R") != 0)
 			{
-			  error (0, 0, "%d: only 'R' and 'RE' prefix allowed",
+			  err (0, "%d: only 'R' and 'RE' prefix allowed",
 				 i386_lineno - 1);
 			}
 		      if (check_duplicates ($1) == 0
@@ -310,7 +306,7 @@
 			    {
 			      if (tsearch ($4, &mnemonics,
 					   (comparison_fn_t) strcmp) == NULL)
-				error (EXIT_FAILURE, errno, "tsearch");
+				err (EXIT_FAILURE, "tsearch");
 			      ++nmnemonics;
 			    }
 
@@ -331,7 +327,7 @@
 			      else if (strcmp ($5->name, "D") == 0)
 				newp->suffix = suffix_D;
 			      else
-				error (EXIT_FAILURE, 0,
+				err (EXIT_FAILURE,
 				       "%s: %d: unknown suffix '%s'",
 				       infname, i386_lineno - 1, $5->name);
 
@@ -344,7 +340,7 @@
 				  ns->idx = ++nsuffixes;
 				  if (tsearch (ns, &suffixes, compare_suf)
 				      == NULL)
-				    error (EXIT_FAILURE, errno, "tsearch");
+				    err (EXIT_FAILURE, "tsearch");
 				}
 			    }
 
@@ -374,7 +370,7 @@
 		      res = tfind (&search, &bitfields, bitfield_compare);
 		      if (res == NULL)
 			{
-			  error (0, 0, "%d: unknown bitfield '%s'",
+			  err (0, "%d: unknown bitfield '%s'",
 				 i386_lineno, search.name);
 			  $$ = NULL;
 			}
@@ -437,7 +433,7 @@
 		      res = tfind (&search, &bitfields, bitfield_compare);
 		      if (res == NULL)
 			{
-			  error (0, 0, "%d: unknown bitfield '%s'",
+			  err (0, "%d: unknown bitfield '%s'",
 				 i386_lineno, search.name);
 			  $$->type = failure;
 			}
@@ -509,7 +505,7 @@
 			    $$->field = &bx_reg;
 			  else
 			    {
-			      error (0, 0, "%d: unknown bitfield '%s'",
+			      err (0, "%d: unknown bitfield '%s'",
 				     i386_lineno, search.name);
 			      $$->field = NULL;
 			    }
@@ -549,7 +545,7 @@
 static void
 yyerror (const char *s)
 {
-  error (0, 0, gettext ("while reading i386 CPU description: %s at line %d"),
+  err (0, gettext ("while reading i386 CPU description: %s at line %d"),
          gettext (s), i386_lineno);
 }
 
@@ -574,14 +570,14 @@
 
   if (tfind (newp, &bitfields, bitfield_compare) != NULL)
     {
-      error (0, 0, "%d: duplicated definition of bitfield '%s'",
+      err (0, "%d: duplicated definition of bitfield '%s'",
 	     i386_lineno, name);
       free (name);
       return;
     }
 
   if (tsearch (newp, &bitfields, bitfield_compare) == NULL)
-    error (EXIT_FAILURE, errno, "%d: cannot insert new bitfield '%s'",
+    err (EXIT_FAILURE, "%d: cannot insert new bitfield '%s'",
 	   i386_lineno, name);
 }
 
@@ -621,7 +617,7 @@
 	}
       obstack_1grow (&os, '\0');
 
-      error (0, 0, "%d: field '%s' not a multiple of 8 bits in size",
+      err (0, "%d: field '%s' not a multiple of 8 bits in size",
 	     i386_lineno, (char *) obstack_finish (&os));
 
       obstack_free (&os, NULL);
@@ -642,7 +638,7 @@
 	{
 	  if (val->field->tmp == testcnt)
 	    {
-	      error (0, 0, "%d: bitfield '%s' used more than once",
+	      err (0, "%d: bitfield '%s' used more than once",
 		     i386_lineno - 1, val->field->name);
 	      result = 1;
 	    }
@@ -679,7 +675,7 @@
 
 	    if (runp == NULL)
 	      {
-		error (0, 0, "%d: unknown bitfield '%s' used in output format",
+		err (0, "%d: unknown bitfield '%s' used in output format",
 		       i386_lineno - 1, name->field->name);
 		result = 1;
 	      }
@@ -723,7 +719,7 @@
 #if 0
 	  if (runp == NULL)
 	    {
-	      error (0, 0, "%d: bitfield '%s' not used",
+	      err (0, "%d: bitfield '%s' not used",
 		     i386_lineno - 1, bitval->field->name);
 	      result = 1;
 	    }
@@ -786,7 +782,7 @@
       if (runp->type == string)
 	{
 	  if (instr->operands[n].str != NULL)
-	    error (EXIT_FAILURE, 0,
+	    err (EXIT_FAILURE,
 		   "%d: cannot have more than one string parameter",
 		   i386_lineno - 1);
 
@@ -840,7 +836,7 @@
 	  else if (instr->operands[n].off3 == 0)
 	    instr->operands[n].off3 = bitoff;
 	  else
-	    error (EXIT_FAILURE, 0,
+	    err (EXIT_FAILURE,
 		   "%d: cannot have more than three fields in parameter",
 		   i386_lineno - 1);
 
@@ -916,7 +912,7 @@
 		newp->str = runp->operands[i].fct;
 		newp->idx = 0;
 		if (tsearch (newp, &fct_names[i], compare_argstring) == NULL)
-		  error (EXIT_FAILURE, errno, "tsearch");
+		  err (EXIT_FAILURE, "tsearch");
 		++nfct_names[i];
 	      }
 
@@ -929,7 +925,7 @@
 		    newp->str = runp->operands[i].str;
 		    newp->idx = 0;
 		    if (tsearch (newp, &strs[i], compare_argstring) == NULL)
-		      error (EXIT_FAILURE, errno, "tsearch");
+		      err (EXIT_FAILURE, "tsearch");
 		    ++nstrs[i];
 		  }
 	      }
diff --git a/libdw/ChangeLog b/libdw/ChangeLog
--- a/libdw/ChangeLog
+++ b/libdw/ChangeLog
@@ -308,6 +308,10 @@
 
 	* dwarf_hasattr_integrate.c: Integrate DW_AT_specification too.
 
+2009-08-17  Roland McGrath  <roland@redhat.com>
+
+	* libdw.h: Disable extern inlines for GCC 4.2.
+
 2009-08-10  Roland McGrath  <roland@redhat.com>
 
 	* dwarf_getscopevar.c: Use dwarf_diename.
@@ -1076,6 +1080,11 @@
 
 2005-05-31  Roland McGrath  <roland@redhat.com>
 
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
+2005-05-31  Roland McGrath  <roland@redhat.com>
+
 	* dwarf_formref_die.c (dwarf_formref_die): Add CU header offset to
 	formref offset.
 
diff --git a/libdw/Makefile.in b/libdw/Makefile.in
--- a/libdw/Makefile.in
+++ b/libdw/Makefile.in
@@ -192,6 +192,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -221,6 +222,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = 1
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -282,8 +284,8 @@
 INCLUDES = -I. -I$(srcdir) -I$(top_srcdir)/lib -I.. \
 	-I$(srcdir)/../libelf
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1) $(am__append_2)
 @MUDFLAP_FALSE@libmudflap = 
diff --git a/libdw/dwarf_getpubnames.c b/libdw/dwarf_getpubnames.c
--- a/libdw/dwarf_getpubnames.c
+++ b/libdw/dwarf_getpubnames.c
@@ -58,6 +58,7 @@
 #include <sys/param.h>
 
 #include <libdwP.h>
+#include <system.h>
 #include <dwarf.h>
 
 
diff --git a/libdw/libdw.h b/libdw/libdw.h
--- a/libdw/libdw.h
+++ b/libdw/libdw.h
@@ -852,7 +852,7 @@
 
 
 /* Inline optimizations.  */
-#ifdef __OPTIMIZE__
+#if defined __OPTIMIZE__ && !(__GNUC__ == 4 && __GNUC_MINOR__ == 2)
 /* Return attribute code of given attribute.  */
 __libdw_extern_inline unsigned int
 dwarf_whatattr (Dwarf_Attribute *attr)
diff --git a/libdw/libdw_alloc.c b/libdw/libdw_alloc.c
--- a/libdw/libdw_alloc.c
+++ b/libdw/libdw_alloc.c
@@ -52,7 +52,7 @@
 # include <config.h>
 #endif
 
-#include <error.h>
+#include <err.h>
 #include <errno.h>
 #include <stdlib.h>
 #include <sys/param.h>
@@ -95,5 +95,5 @@
 __libdw_oom (void)
 {
   while (1)
-    error (EXIT_FAILURE, ENOMEM, "libdw");
+    err (EXIT_FAILURE, "libdw");
 }
diff --git a/libdwfl/ChangeLog b/libdwfl/ChangeLog
--- a/libdwfl/ChangeLog
+++ b/libdwfl/ChangeLog
@@ -1366,6 +1366,11 @@
 
 2005-07-21  Roland McGrath  <roland@redhat.com>
 
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
+2005-07-21  Roland McGrath  <roland@redhat.com>
+
 	* Makefile.am (noinst_HEADERS): Add loc2c.c.
 
 	* test2.c (main): Check sscanf result to quiet warning.
diff --git a/libdwfl/Makefile.in b/libdwfl/Makefile.in
--- a/libdwfl/Makefile.in
+++ b/libdwfl/Makefile.in
@@ -67,7 +67,7 @@
 	dwfl_getmodules.c dwfl_getdwarf.c dwfl_module_getdwarf.c \
 	dwfl_module_getelf.c dwfl_validate_address.c argp-std.c \
 	find-debuginfo.c dwfl_build_id_find_elf.c \
-	dwfl_build_id_find_debuginfo.c linux-kernel-modules.c \
+	dwfl_build_id_find_debuginfo.c \
 	linux-proc-maps.c dwfl_addrmodule.c dwfl_addrdwarf.c cu.c \
 	dwfl_module_nextcu.c dwfl_nextcu.c dwfl_cumodule.c \
 	dwfl_module_addrdie.c dwfl_addrdie.c lines.c dwfl_lineinfo.c \
@@ -95,7 +95,7 @@
 	dwfl_validate_address.$(OBJEXT) argp-std.$(OBJEXT) \
 	find-debuginfo.$(OBJEXT) dwfl_build_id_find_elf.$(OBJEXT) \
 	dwfl_build_id_find_debuginfo.$(OBJEXT) \
-	linux-kernel-modules.$(OBJEXT) linux-proc-maps.$(OBJEXT) \
+	linux-proc-maps.$(OBJEXT) \
 	dwfl_addrmodule.$(OBJEXT) dwfl_addrdwarf.$(OBJEXT) \
 	cu.$(OBJEXT) dwfl_module_nextcu.$(OBJEXT) \
 	dwfl_nextcu.$(OBJEXT) dwfl_cumodule.$(OBJEXT) \
@@ -182,6 +182,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -211,6 +212,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = 1
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -273,8 +275,8 @@
 	-I$(srcdir)/../libelf -I$(srcdir)/../libebl \
 	-I$(srcdir)/../libdw
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1)
 @MUDFLAP_FALSE@libmudflap = 
@@ -293,7 +295,7 @@
 	dwfl_getmodules.c dwfl_getdwarf.c dwfl_module_getdwarf.c \
 	dwfl_module_getelf.c dwfl_validate_address.c argp-std.c \
 	find-debuginfo.c dwfl_build_id_find_elf.c \
-	dwfl_build_id_find_debuginfo.c linux-kernel-modules.c \
+	dwfl_build_id_find_debuginfo.c \
 	linux-proc-maps.c dwfl_addrmodule.c dwfl_addrdwarf.c cu.c \
 	dwfl_module_nextcu.c dwfl_nextcu.c dwfl_cumodule.c \
 	dwfl_module_addrdie.c dwfl_addrdie.c lines.c dwfl_lineinfo.c \
@@ -424,7 +426,6 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwfl_crc32_file.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lines.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/link_map.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linux-kernel-modules.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linux-proc-maps.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lzma.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/offline.Po@am__quote@
diff --git a/libdwfl/argp-std.c b/libdwfl/argp-std.c
--- a/libdwfl/argp-std.c
+++ b/libdwfl/argp-std.c
@@ -73,9 +73,6 @@
   { "linux-process-map", 'M', "FILE", 0,
     N_("Find addresses in files mapped as read from FILE"
        " in Linux /proc/PID/maps format"), 0 },
-  { "kernel", 'k', NULL, 0, N_("Find addresses in the running kernel"), 0 },
-  { "offline-kernel", 'K', "RELEASE", OPTION_ARG_OPTIONAL,
-    N_("Kernel with all modules"), 0 },
   { "debuginfo-path", OPT_DEBUGINFO, "PATH", 0,
     N_("Search path for separate debuginfo files"), 0 },
   { NULL, 0, NULL, 0, NULL, 0 }
@@ -102,15 +99,6 @@
     .find_elf = INTUSE(dwfl_linux_proc_find_elf),
   };
 
-static const Dwfl_Callbacks kernel_callbacks =
-  {
-    .find_debuginfo = INTUSE(dwfl_standard_find_debuginfo),
-    .debuginfo_path = &debuginfo_path,
-
-    .find_elf = INTUSE(dwfl_linux_kernel_find_elf),
-    .section_address = INTUSE(dwfl_linux_kernel_module_section_address),
-  };
-
 static error_t
 parse_opt (int key, char *arg, struct argp_state *state)
 {
@@ -244,37 +232,6 @@
       }
       break;
 
-    case 'k':
-      if (state->hook == NULL)
-	{
-	  Dwfl *dwfl = INTUSE(dwfl_begin) (&kernel_callbacks);
-	  int result = INTUSE(dwfl_linux_kernel_report_kernel) (dwfl);
-	  if (result != 0)
-	    return fail (dwfl, result, _("cannot load kernel symbols"));
-	  result = INTUSE(dwfl_linux_kernel_report_modules) (dwfl);
-	  if (result != 0)
-	    /* Non-fatal to have no modules since we do have the kernel.  */
-	    failure (dwfl, result, _("cannot find kernel modules"));
-	  state->hook = dwfl;
-	}
-      else
-	goto toomany;
-      break;
-
-    case 'K':
-      if (state->hook == NULL)
-	{
-	  Dwfl *dwfl = INTUSE(dwfl_begin) (&offline_callbacks);
-	  int result = INTUSE(dwfl_linux_kernel_report_offline) (dwfl, arg,
-								 NULL);
-	  if (result != 0)
-	    return fail (dwfl, result, _("cannot find kernel or modules"));
-	  state->hook = dwfl;
-	}
-      else
-	goto toomany;
-      break;
-
     case ARGP_KEY_SUCCESS:
       {
 	Dwfl *dwfl = state->hook;
diff --git a/libdwfl/core-file.c b/libdwfl/core-file.c
--- a/libdwfl/core-file.c
+++ b/libdwfl/core-file.c
@@ -64,7 +64,7 @@
    This implementation is pessimal for non-mmap cases and should
    be replaced by more diddling inside libelf internals.  */
 static Elf *
-elf_begin_rand (Elf *parent, loff_t offset, loff_t size, loff_t *next)
+elf_begin_rand (Elf *parent, off_t offset, off_t size, off_t *next)
 {
   if (parent == NULL)
     return NULL;
@@ -79,14 +79,14 @@
     return NULL;
   }
 
-  loff_t min = (parent->kind == ELF_K_ELF ?
+  off_t min = (parent->kind == ELF_K_ELF ?
 		(parent->class == ELFCLASS32
 		 ? sizeof (Elf32_Ehdr) : sizeof (Elf64_Ehdr))
 		: parent->kind == ELF_K_AR ? SARMAG
 		: 0);
 
   if (unlikely (offset < min)
-      || unlikely (offset >= (loff_t) parent->maximum_size))
+      || unlikely (offset >= (off_t) parent->maximum_size))
     return fail (ELF_E_RANGE);
 
   /* For an archive, fetch just the size field
@@ -113,11 +113,11 @@
       char *endp;
       size = strtoll (h.ar_size, &endp, 10);
       if (unlikely (endp == h.ar_size)
-	  || unlikely ((loff_t) parent->maximum_size - offset < size))
+	  || unlikely ((off_t) parent->maximum_size - offset < size))
 	return fail (ELF_E_INVALID_ARCHIVE);
     }
 
-  if (unlikely ((loff_t) parent->maximum_size - offset < size))
+  if (unlikely ((off_t) parent->maximum_size - offset < size))
     return fail (ELF_E_RANGE);
 
   /* Even if we fail at this point, update *NEXT to point past the file.  */
@@ -125,7 +125,7 @@
     *next = offset + size;
 
   if (unlikely (offset == 0)
-      && unlikely (size == (loff_t) parent->maximum_size))
+      && unlikely (size == (off_t) parent->maximum_size))
     return elf_clone (parent, parent->cmd);
 
   /* Note the image is guaranteed live only as long as PARENT
@@ -135,7 +135,7 @@
   Elf_Data *data = elf_getdata_rawchunk (parent, offset, size, ELF_T_BYTE);
   if (data == NULL)
     return NULL;
-  assert ((loff_t) data->d_size == size);
+  assert ((off_t) data->d_size == size);
   return elf_memory (data->d_buf, size);
 }
 
diff --git a/libdwfl/dwfl_build_id_find_elf.c b/libdwfl/dwfl_build_id_find_elf.c
--- a/libdwfl/dwfl_build_id_find_elf.c
+++ b/libdwfl/dwfl_build_id_find_elf.c
@@ -48,6 +48,7 @@
    <http://www.openinventionnetwork.com>.  */
 
 #include "libdwflP.h"
+#include <system.h>
 #include <inttypes.h>
 #include <fcntl.h>
 #include <unistd.h>
@@ -109,7 +110,7 @@
 	{
 	  if (*file_name != NULL)
 	    free (*file_name);
-	  *file_name = canonicalize_file_name (name);
+	  *file_name = realpath (name, NULL);
 	  if (*file_name == NULL)
 	    {
 	      *file_name = name;
diff --git a/libdwfl/dwfl_module_getdwarf.c b/libdwfl/dwfl_module_getdwarf.c
--- a/libdwfl/dwfl_module_getdwarf.c
+++ b/libdwfl/dwfl_module_getdwarf.c
@@ -48,6 +48,7 @@
    <http://www.openinventionnetwork.com>.  */
 
 #include "libdwflP.h"
+#include <system.h>
 #include <fcntl.h>
 #include <string.h>
 #include <unistd.h>
diff --git a/libdwfl/find-debuginfo.c b/libdwfl/find-debuginfo.c
--- a/libdwfl/find-debuginfo.c
+++ b/libdwfl/find-debuginfo.c
@@ -185,7 +185,7 @@
     }
 
   char *file_dirname = (file_basename == file_name ? NULL
-			: strndupa (file_name, file_basename - 1 - file_name));
+			: strndup (file_name, file_basename - 1 - file_name));
   char *p;
   while ((p = strsep (&path, ":")) != NULL)
     {
@@ -279,7 +279,7 @@
       /* If FILE_NAME is a symlink, the debug file might be associated
 	 with the symlink target name instead.  */
 
-      char *canon = canonicalize_file_name (file_name);
+      char *canon = realpath (file_name, NULL);
       if (canon != NULL && strcmp (file_name, canon))
 	fd = find_debuginfo_in_path (mod, canon,
 				     debuglink_file, debuglink_crc,
diff --git a/libebl/ChangeLog b/libebl/ChangeLog
--- a/libebl/ChangeLog
+++ b/libebl/ChangeLog
@@ -628,6 +628,11 @@
 	* Makefile.am (libebl_*_so_SOURCES): Set to $(*_SRCS) so dependency
 	tracking works right.
 
+2005-05-31  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
 2005-05-21  Ulrich Drepper  <drepper@redhat.com>
 
 	* libebl_x86_64.map: Add x86_64_core_note.
diff --git a/libebl/Makefile.in b/libebl/Makefile.in
--- a/libebl/Makefile.in
+++ b/libebl/Makefile.in
@@ -143,6 +143,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -172,6 +173,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = 1
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -234,8 +236,8 @@
 	-I$(srcdir)/../libelf -I$(srcdir)/../libdw \
 	-I$(srcdir)/../libasm
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1) -fpic
 @MUDFLAP_FALSE@libmudflap = 
diff --git a/libebl/eblopenbackend.c b/libebl/eblopenbackend.c
--- a/libebl/eblopenbackend.c
+++ b/libebl/eblopenbackend.c
@@ -53,7 +53,6 @@
 
 #include <assert.h>
 #include <dlfcn.h>
-#include <error.h>
 #include <libelfP.h>
 #include <dwarf.h>
 #include <stdlib.h>
diff --git a/libelf/ChangeLog b/libelf/ChangeLog
--- a/libelf/ChangeLog
+++ b/libelf/ChangeLog
@@ -671,6 +671,11 @@
 
 	* elf.h: Update from glibc.
 
+2005-05-31  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
 2005-05-08  Roland McGrath  <roland@redhat.com>
 
 	* elf_begin.c (read_file) [_MUDFLAP]: Don't use mmap for now.
diff --git a/libelf/Makefile.in b/libelf/Makefile.in
--- a/libelf/Makefile.in
+++ b/libelf/Makefile.in
@@ -189,6 +189,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -218,6 +219,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = 1
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -278,8 +280,8 @@
 zip_LIBS = @zip_LIBS@
 INCLUDES = -I. -I$(srcdir) -I$(top_srcdir)/lib -I..
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1) $(am__append_2)
 @MUDFLAP_FALSE@libmudflap = 
diff --git a/libelf/ar.h b/libelf/ar.h
new file mode 100644
--- /dev/null
+++ b/libelf/ar.h
@@ -0,0 +1,55 @@
+/* archive file definition for GNU software
+
+   Copyright 2001, 2008, 2010 Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+   
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+   
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+/* So far this is correct for BSDish archives.  Don't forget that
+   files must begin on an even byte boundary. */
+
+#ifndef __GNU_AR_H__
+#define __GNU_AR_H__
+
+/* Note that the usual '\n' in magic strings may translate to different
+   characters, as allowed by ANSI.  '\012' has a fixed value, and remains
+   compatible with existing BSDish archives. */
+
+#define ARMAG  "!<arch>\012"	/* For COFF and a.out archives.  */
+#define ARMAGB "!<bout>\012"	/* For b.out archives.  */
+#define ARMAGT "!<thin>\012"	/* For thin archives.  */
+#define SARMAG 8
+#define ARFMAG "`\012"
+
+/* The ar_date field of the armap (__.SYMDEF) member of an archive
+   must be greater than the modified date of the entire file, or 
+   BSD-derived linkers complain.  We originally write the ar_date with
+   this offset from the real file's mod-time.  After finishing the
+   file, we rewrite ar_date if it's not still greater than the mod date.  */
+
+#define ARMAP_TIME_OFFSET       60
+
+struct ar_hdr
+{
+  char ar_name[16];		/* Name of this member.  */
+  char ar_date[12];		/* File mtime.  */
+  char ar_uid[6];		/* Owner uid; printed as decimal.  */
+  char ar_gid[6];		/* Owner gid; printed as decimal.  */
+  char ar_mode[8];		/* File mode, printed as octal.   */
+  char ar_size[10];		/* File size, printed as decimal.  */
+  char ar_fmag[2];		/* Should contain ARFMAG.  */
+};
+
+#endif /* __GNU_AR_H__ */
diff --git a/libelf/common.h b/libelf/common.h
--- a/libelf/common.h
+++ b/libelf/common.h
@@ -51,7 +51,7 @@
 #ifndef _COMMON_H
 #define _COMMON_H       1
 
-#include <ar.h>
+#include "ar.h"
 #include <byteswap.h>
 #include <endian.h>
 #include <stdlib.h>
@@ -160,7 +160,7 @@
   (Var) = (sizeof (Var) == 1						      \
 	   ? (unsigned char) (Var)					      \
 	   : (sizeof (Var) == 2						      \
-	      ? bswap_16 (Var)						      \
+	      ? (unsigned short int) bswap_16 (Var)			      \
 	      : (sizeof (Var) == 4					      \
 		 ? bswap_32 (Var)					      \
 		 : bswap_64 (Var))))
@@ -169,7 +169,7 @@
   (Dst) = (sizeof (Var) == 1						      \
 	   ? (unsigned char) (Var)					      \
 	   : (sizeof (Var) == 2						      \
-	      ? bswap_16 (Var)						      \
+	      ? (unsigned short int) bswap_16 (Var)			      \
 	      : (sizeof (Var) == 4					      \
 		 ? bswap_32 (Var)					      \
 		 : bswap_64 (Var))))
diff --git a/libelf/elf.h b/libelf/elf.h
--- a/libelf/elf.h
+++ b/libelf/elf.h
@@ -21,9 +21,10 @@
 #ifndef _ELF_H
 #define	_ELF_H 1
 
-#include <features.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* Standard ELF types.  */
 
@@ -2794,6 +2795,8 @@
 #define R_M32R_NUM		256	/* Keep this the last entry. */
 
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif	/* elf.h */
diff --git a/libelf/elf_begin.c b/libelf/elf_begin.c
--- a/libelf/elf_begin.c
+++ b/libelf/elf_begin.c
@@ -796,7 +796,7 @@
     }
 
   /* Copy the raw name over to a NUL terminated buffer.  */
-  *((char *) __mempcpy (elf->state.ar.raw_name, ar_hdr->ar_name, 16)) = '\0';
+  *((char *) mempcpy (elf->state.ar.raw_name, ar_hdr->ar_name, 16)) = '\0';
 
   elf_ar_hdr = &elf->state.ar.elf_ar_hdr;
 
@@ -888,7 +888,7 @@
       const char *string = ar_hdr->FIELD;				      \
       if (ar_hdr->FIELD[sizeof (ar_hdr->FIELD) - 1] != ' ')		      \
 	{								      \
-	  *((char *) __mempcpy (buf, ar_hdr->FIELD, sizeof (ar_hdr->FIELD)))  \
+	  *((char *) mempcpy (buf, ar_hdr->FIELD, sizeof (ar_hdr->FIELD)))  \
 	    = '\0';							      \
 	  string = buf;							      \
 	}								      \
diff --git a/libelf/libelf.h b/libelf/libelf.h
--- a/libelf/libelf.h
+++ b/libelf/libelf.h
@@ -95,7 +95,7 @@
   Elf_Type d_type;		/* Type of this piece of data.  */
   unsigned int d_version;	/* ELF version.  */
   size_t d_size;		/* Size in bytes.  */
-  loff_t d_off;			/* Offset into section.  */
+  off_t d_off;			/* Offset into section.  */
   size_t d_align;		/* Alignment in section.  */
 } Elf_Data;
 
@@ -157,7 +157,7 @@
   uid_t ar_uid;			/* User ID.  */
   gid_t ar_gid;			/* Group ID.  */
   mode_t ar_mode;		/* File mode.  */
-  loff_t ar_size;		/* File size.  */
+  off_t ar_size;		/* File size.  */
   char *ar_rawname;		/* Original name of archive member.  */
 } Elf_Arhdr;
 
@@ -198,13 +198,13 @@
 extern int elf_end (Elf *__elf);
 
 /* Update ELF descriptor and write file to disk.  */
-extern loff_t elf_update (Elf *__elf, Elf_Cmd __cmd);
+extern off_t elf_update (Elf *__elf, Elf_Cmd __cmd);
 
 /* Determine what kind of file is associated with ELF.  */
 extern Elf_Kind elf_kind (Elf *__elf) __attribute__ ((__pure__));
 
 /* Get the base offset for an object file.  */
-extern loff_t elf_getbase (Elf *__elf);
+extern off_t elf_getbase (Elf *__elf);
 
 
 /* Retrieve file identification data.  */
@@ -322,7 +322,7 @@
    would be for TYPE.  The resulting Elf_Data pointer is valid until
    elf_end (ELF) is called.  */
 extern Elf_Data *elf_getdata_rawchunk (Elf *__elf,
-				       loff_t __offset, size_t __size,
+				       off_t __offset, size_t __size,
 				       Elf_Type __type);
 
 
@@ -334,7 +334,7 @@
 extern Elf_Arhdr *elf_getarhdr (Elf *__elf);
 
 /* Return offset in archive for current file ELF.  */
-extern loff_t elf_getaroff (Elf *__elf);
+extern off_t elf_getaroff (Elf *__elf);
 
 /* Select archive element at OFFSET.  */
 extern size_t elf_rand (Elf *__elf, size_t __offset);
diff --git a/libelf/libelfP.h b/libelf/libelfP.h
--- a/libelf/libelfP.h
+++ b/libelf/libelfP.h
@@ -55,7 +55,7 @@
 # include <config.h>
 #endif
 
-#include <ar.h>
+#include "ar.h"
 #include <gelf.h>
 
 #include <errno.h>
diff --git a/m4/Makefile.in b/m4/Makefile.in
--- a/m4/Makefile.in
+++ b/m4/Makefile.in
@@ -75,6 +75,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -104,6 +105,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -260,8 +260,16 @@
 	* readelf.c (attr_callback): Use print_block only when we don't use
 	print_ops.
 
+2009-08-17  Roland McGrath  <roland@redhat.com>
+
+	* ld.h: Disable extern inlines for GCC 4.2.
+
 2009-08-14  Roland McGrath  <roland@redhat.com>
 
+	* strings.c (read_block): Conditionalize posix_fadvise use
+	on [POSIX_FADV_SEQUENTIAL].
+	From Petr Salinger <Petr.Salinger@seznam.cz>.
+
 	* ar.c (do_oper_extract): Use pathconf instead of statfs.
 
 2009-08-01  Ulrich Drepper  <drepper@redhat.com>
@@ -425,6 +433,8 @@
 	* readelf.c (print_debug_frame_section): Use t instead of j formats
 	for ptrdiff_t OFFSET.
 
+	* addr2line.c (handle_address): Use %a instead of %m for compatibility.
+
 2009-01-21  Ulrich Drepper  <drepper@redhat.com>
 
 	* elflint.c (check_program_header): Fix typo in .eh_frame_hdr section
@@ -608,6 +618,11 @@
 	that matches its PT_LOAD's p_flags &~ PF_W.  On sparc, PF_X really
 	is valid in RELRO.
 
+2008-03-01  Roland McGrath  <roland@redhat.com>
+
+	* readelf.c (dump_archive_index): Tweak portability hack
+	to match [__GNUC__ < 4] too.
+
 2008-02-29  Roland McGrath  <roland@redhat.com>
 
 	* readelf.c (print_attributes): Add a cast.
@@ -859,6 +874,8 @@
 
 	* readelf.c (hex_dump): Fix rounding error in whitespace calculation.
 
+	* Makefile.am (readelf_no_Werror): New variable.
+
 2007-10-15  Roland McGrath  <roland@redhat.com>
 
 	* make-debug-archive.in: New file.
@@ -1298,6 +1315,10 @@
 	* elflint.c (valid_e_machine): Add EM_ALPHA.
 	Reported by Christian Aichinger <Greek0@gmx.net>.
 
+	* strings.c (map_file): Define POSIX_MADV_SEQUENTIAL to
+	MADV_SEQUENTIAL if undefined.  	Don't call posix_madvise
+	if neither is defined.
+
 2006-08-08  Ulrich Drepper  <drepper@redhat.com>
 
 	* elflint.c (check_dynamic): Don't require DT_HASH for DT_SYMTAB.
@@ -1374,6 +1395,10 @@
 	* Makefile.am: Add hacks to create dependency files for non-generic
 	linker.
 
+2006-04-05  Roland McGrath  <roland@redhat.com>
+
+	* strings.c (MAP_POPULATE): Define to 0 if undefined.
+
 2006-06-12  Ulrich Drepper  <drepper@redhat.com>
 
 	* ldgeneric.c (ld_generic_generate_sections): Don't create .interp
@@ -1722,6 +1747,11 @@
 	* readelf.c (print_debug_loc_section): Fix indentation for larger
 	address size.
 
+2005-05-31  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
 2005-05-30  Roland McGrath  <roland@redhat.com>
 
 	* readelf.c (print_debug_line_section): Print section offset of each
diff --git a/src/Makefile.am b/src/Makefile.am
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -99,6 +99,9 @@
 # XXX While the file is not finished, don't warn about this
 ldgeneric_no_Wunused = yes
 
+# Buggy old compilers.
+readelf_no_Werror = yes
+
 readelf_LDADD = $(libdw) $(libebl) $(libelf) $(libeu) $(libmudflap) -ldl
 nm_LDADD = $(libdw) $(libebl) $(libelf) $(libeu) $(libmudflap) -ldl
 size_LDADD = $(libelf) $(libeu) $(libmudflap)
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -228,6 +228,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -257,6 +258,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -320,8 +322,8 @@
 	-I$(srcdir)/../libdw -I$(srcdir)/../libdwfl \
 	-I$(srcdir)/../libasm
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1)
 @MUDFLAP_FALSE@libmudflap = 
@@ -368,6 +370,9 @@
 addr2line_no_Wformat = yes
 # XXX While the file is not finished, don't warn about this
 ldgeneric_no_Wunused = yes
+
+# Buggy old compilers.
+readelf_no_Werror = yes
 readelf_LDADD = $(libdw) $(libebl) $(libelf) $(libeu) $(libmudflap) -ldl
 nm_LDADD = $(libdw) $(libebl) $(libelf) $(libeu) $(libmudflap) -ldl
 size_LDADD = $(libelf) $(libeu) $(libmudflap)
diff --git a/src/addr2line.c b/src/addr2line.c
--- a/src/addr2line.c
+++ b/src/addr2line.c
@@ -455,10 +455,10 @@
       bool parsed = false;
       int i, j;
       char *name = NULL;
-      if (sscanf (string, "(%m[^)])%" PRIiMAX "%n", &name, &addr, &i) == 2
+      if (sscanf (string, "(%a[^)])%" PRIiMAX "%n", &name, &addr, &i) == 2
 	  && string[i] == '\0')
 	parsed = adjust_to_section (name, &addr, dwfl);
-      switch (sscanf (string, "%m[^-+]%n%" PRIiMAX "%n", &name, &i, &addr, &j))
+      switch (sscanf (string, "%a[^-+]%n%" PRIiMAX "%n", &name, &i, &addr, &j))
 	{
 	default:
 	  break;
diff --git a/src/findtextrel.c b/src/findtextrel.c
--- a/src/findtextrel.c
+++ b/src/findtextrel.c
@@ -31,7 +31,7 @@
 #include <argp.h>
 #include <assert.h>
 #include <errno.h>
-#include <error.h>
+#include <err.h>
 #include <fcntl.h>
 #include <gelf.h>
 #include <libdw.h>
@@ -226,14 +226,14 @@
   int fd = open64 (real_fname, O_RDONLY);
   if (fd == -1)
     {
-      error (0, errno, gettext ("cannot open '%s'"), fname);
+      err (0, gettext ("cannot open '%s'"), fname);
       return 1;
     }
 
   Elf *elf = elf_begin (fd, ELF_C_READ_MMAP, NULL);
   if (elf == NULL)
     {
-      error (0, 0, gettext ("cannot create ELF descriptor for '%s': %s"),
+      err (0, gettext ("cannot create ELF descriptor for '%s': %s"),
 	     fname, elf_errmsg (-1));
       goto err_close;
     }
@@ -243,7 +243,7 @@
   GElf_Ehdr *ehdr = gelf_getehdr (elf, &ehdr_mem);
   if (ehdr == NULL)
     {
-      error (0, 0, gettext ("cannot get ELF header '%s': %s"),
+      err (0, gettext ("cannot get ELF header '%s': %s"),
 	     fname, elf_errmsg (-1));
     err_elf_close:
       elf_end (elf);
@@ -254,7 +254,7 @@
 
   if (ehdr->e_type != ET_DYN)
     {
-      error (0, 0, gettext ("'%s' is not a DSO or PIE"), fname);
+      err (0, gettext ("'%s' is not a DSO or PIE"), fname);
       goto err_elf_close;
     }
 
@@ -273,7 +273,7 @@
 
       if (shdr == NULL)
 	{
-	  error (0, 0,
+	  err (0,
 		 gettext ("getting get section header of section %zu: %s"),
 		 elf_ndxscn (scn), elf_errmsg (-1));
 	  goto err_elf_close;
@@ -297,7 +297,7 @@
 		  dyn = gelf_getdyn (data, cnt, &dynmem);
 		  if (dyn == NULL)
 		    {
-		      error (0, 0, gettext ("cannot read dynamic section: %s"),
+		      err (0, gettext ("cannot read dynamic section: %s"),
 			     elf_errmsg (-1));
 		      goto err_elf_close;
 		    }
@@ -318,7 +318,7 @@
 
   if (!have_textrel)
     {
-      error (0, 0, gettext ("no text relocations reported in '%s'"), fname);
+      err (0, gettext ("no text relocations reported in '%s'"), fname);
       return 1;
     }
 
@@ -330,7 +330,7 @@
   struct segments *segments
     = (struct segments *) malloc (nsegments_max * sizeof (segments[0]));
   if (segments == NULL)
-    error (1, errno, gettext ("while reading ELF file"));
+    err (1, gettext ("while reading ELF file"));
 
   for (int i = 0; i < ehdr->e_phnum; ++i)
     {
@@ -338,7 +338,7 @@
       GElf_Phdr *phdr = gelf_getphdr (elf, i, &phdr_mem);
       if (phdr == NULL)
 	{
-	  error (0, 0,
+	  err (0,
 		 gettext ("cannot get program header index at offset %d: %s"),
 		 i, elf_errmsg (-1));
 	  result = 1;
@@ -356,7 +356,7 @@
 					       * sizeof (segments[0]));
 	      if (segments == NULL)
 		{
-		  error (0, 0, gettext ("\
+		  err (0, gettext ("\
 cannot get program header index at offset %d: %s"),
 			 i, elf_errmsg (-1));
 		  result = 1;
@@ -407,7 +407,7 @@
 
 	  if (shdr == NULL)
 	    {
-	      error (0, 0,
+	      err (0,
 		     gettext ("cannot get section header of section %Zu: %s"),
 		     elf_ndxscn (scn), elf_errmsg (-1));
 	      result = 1;
@@ -420,7 +420,7 @@
 	      symscn = elf_getscn (elf, shdr->sh_link);
 	      if (symscn == NULL)
 		{
-		  error (0, 0, gettext ("\
+		  err (0, gettext ("\
 cannot get symbol table section %zu in '%s': %s"),
 			 (size_t) shdr->sh_link, fname, elf_errmsg (-1));
 		  result = 1;
@@ -440,7 +440,7 @@
 		  GElf_Rel *rel = gelf_getrel (data, cnt, &rel_mem);
 		  if (rel == NULL)
 		    {
-		      error (0, 0, gettext ("\
+		      err (0, gettext ("\
 cannot get relocation at index %d in section %zu in '%s': %s"),
 			     cnt, elf_ndxscn (scn), fname, elf_errmsg (-1));
 		      result = 1;
@@ -463,7 +463,7 @@
 		  GElf_Rela *rela = gelf_getrela (data, cnt, &rela_mem);
 		  if (rela == NULL)
 		    {
-		      error (0, 0, gettext ("\
+		      err (0, gettext ("\
 cannot get relocation at index %d in section %zu in '%s': %s"),
 			     cnt, elf_ndxscn (scn), fname, elf_errmsg (-1));
 		      result = 1;
@@ -504,7 +504,11 @@
 
 
 static void
-check_rel (size_t nsegments, struct segments segments[nsegments],
+check_rel (size_t nsegments, struct segments segments[
+#if __GNUC__ >= 4
+						      nsegments
+#endif
+	   ],
 	   GElf_Addr addr, Elf *elf, Elf_Scn *symscn, Dwarf *dw,
 	   const char *fname, bool more_than_one, void **knownsrcs)
 {
diff --git a/src/ld.h b/src/ld.h
--- a/src/ld.h
+++ b/src/ld.h
@@ -1122,6 +1122,7 @@
 
 /* Checked whether the symbol is undefined and referenced from a DSO.  */
 extern bool linked_from_dso_p (struct scninfo *scninfo, size_t symidx);
+#if defined __OPTIMIZE__ && !(__GNUC__ == 4 && __GNUC_MINOR__ == 2)
 #ifdef __GNUC_STDC_INLINE__
 __attribute__ ((__gnu_inline__))
 #endif
@@ -1139,5 +1140,6 @@
 
   return sym->defined && sym->in_dso;
 }
+#endif	/* Optimizing and not GCC 4.2.  */
 
 #endif	/* ld.h */
diff --git a/src/readelf.c b/src/readelf.c
--- a/src/readelf.c
+++ b/src/readelf.c
@@ -4274,10 +4274,11 @@
 #define listptr_offset_size(p)	((p)->dwarf64 ? 8 : 4)
 #define listptr_address_size(p)	((p)->addr64 ? 8 : 4)
 
+static const char *listptr_name;
 static int
-compare_listptr (const void *a, const void *b, void *arg)
+compare_listptr (const void *a, const void *b)
 {
-  const char *name = arg;
+  const char *const name = listptr_name;
   struct listptr *p1 = (void *) a;
   struct listptr *p2 = (void *) b;
 
@@ -4357,8 +4358,11 @@
 sort_listptr (struct listptr_table *table, const char *name)
 {
   if (table->n > 0)
-    qsort_r (table->table, table->n, sizeof table->table[0],
-	     &compare_listptr, (void *) name);
+    {
+      listptr_name = name;
+      qsort (table->table, table->n, sizeof table->table[0],
+	     &compare_listptr);
+    }
 }
 
 static bool
@@ -8098,7 +8102,7 @@
 	  if (unlikely (elf_rand (elf, as_off) == 0)
 	      || unlikely ((subelf = elf_begin (-1, ELF_C_READ_MMAP, elf))
 			   == NULL))
-#if __GLIBC__ < 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ < 7)
+#if __GLIBC__ < 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ < 7) || __GNUC__ < 4
 	    while (1)
 #endif
 	      error (EXIT_FAILURE, 0,
diff --git a/src/strings.c b/src/strings.c
--- a/src/strings.c
+++ b/src/strings.c
@@ -51,6 +51,10 @@
 
 #include <system.h>
 
+#ifndef MAP_POPULATE
+# define MAP_POPULATE 0
+#endif
+
 
 /* Prototypes of local functions.  */
 static int read_fd (int fd, const char *fname, off64_t fdlen);
@@ -491,8 +495,13 @@
 		    fd, start_off);
       if (mem != MAP_FAILED)
 	{
+#if !defined POSIX_MADV_SEQUENTIAL && defined MADV_SEQUENTIAL
+# define POSIX_MADV_SEQUENTIAL MADV_SEQUENTIAL
+#endif
+#ifdef POSIX_MADV_SEQUENTIAL
 	  /* We will go through the mapping sequentially.  */
 	  (void) posix_madvise (mem, map_size, POSIX_MADV_SEQUENTIAL);
+#endif
 	  break;
 	}
       if (errno != EINVAL && errno != ENOMEM)
@@ -584,9 +593,11 @@
       elfmap_off = from & ~(ps - 1);
       elfmap_base = elfmap = map_file (fd, elfmap_off, fdlen, &elfmap_size);
 
+#ifdef POSIX_FADV_SEQUENTIAL
       if (unlikely (elfmap == MAP_FAILED))
 	/* Let the kernel know we are going to read everything in sequence.  */
 	(void) posix_fadvise (fd, 0, 0, POSIX_FADV_SEQUENTIAL);
+#endif
     }
 
   if (unlikely (elfmap == MAP_FAILED))
diff --git a/src/strip.c b/src/strip.c
--- a/src/strip.c
+++ b/src/strip.c
@@ -53,6 +53,12 @@
 #include <libebl.h>
 #include <system.h>
 
+#ifdef HAVE_FUTIMES
+# define FUTIMES(fd, fname, tvp) futimes (fd, tvp)
+#else
+# define FUTIMES(fd, fname, tvp) utimes (fname, tvp)
+#endif
+
 
 /* Name and version of program.  */
 static void print_version (FILE *stream, struct argp_state *state);
@@ -311,8 +317,18 @@
 
       /* If we have to preserve the timestamp, we need it in the
 	 format utimes() understands.  */
+#ifdef HAVE_STRUCT_STAT_ST_ATIM
       TIMESPEC_TO_TIMEVAL (&tv[0], &pre_st.st_atim);
+#else
+      tv[0].tv_sec = pre_st.st_atime;
+      tv[0].tv_usec = 0;
+#endif
+#ifdef HAVE_STRUCT_STAT_ST_MTIM
       TIMESPEC_TO_TIMEVAL (&tv[1], &pre_st.st_mtim);
+#else
+      tv[1].tv_sec = pre_st.st_atime;
+      tv[1].tv_usec = 0;
+#endif
     }
 
   /* Open the file.  */
@@ -1809,7 +1825,7 @@
   /* If requested, preserve the timestamp.  */
   if (tvp != NULL)
     {
-      if (futimes (fd, tvp) != 0)
+      if (FUTIMES (fd, output_fname, tvp) != 0)
 	{
 	  error (0, errno, gettext ("\
 cannot set access and modification date of '%s'"),
@@ -1866,7 +1882,7 @@
 
   if (tvp != NULL)
     {
-      if (unlikely (futimes (fd, tvp) != 0))
+      if (unlikely (FUTIMES (fd, fname, tvp) != 0))
 	{
 	  error (0, errno, gettext ("\
 cannot set access and modification date of '%s'"), fname);
diff --git a/tests/ChangeLog b/tests/ChangeLog
--- a/tests/ChangeLog
+++ b/tests/ChangeLog
@@ -205,6 +205,8 @@
 
 2008-01-21  Roland McGrath  <roland@redhat.com>
 
+	* line2addr.c (main): Revert last change.
+
 	* testfile45.S.bz2: Add tests for cltq, cqto.
 	* testfile45.expect.bz2: Adjust.
 
@@ -913,6 +915,11 @@
 	* Makefile.am (TESTS): Add run-elflint-test.sh.
 	(EXTRA_DIST): Add run-elflint-test.sh and testfile18.bz2.
 
+2005-05-31  Roland McGrath  <roland@redhat.com>
+
+	* Makefile.am (WEXTRA): New variable, substituted by configure.
+	(AM_CFLAGS): Use it in place of -Wextra.
+
 2005-05-24  Ulrich Drepper  <drepper@redhat.com>
 
 	* get-files.c (main): Use correct format specifier.
diff --git a/tests/Makefile.in b/tests/Makefile.in
--- a/tests/Makefile.in
+++ b/tests/Makefile.in
@@ -372,6 +372,7 @@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
 LDFLAGS = @LDFLAGS@
+LD_AS_NEEDED = @LD_AS_NEEDED@
 LEX = @LEX@
 LEXLIB = @LEXLIB@
 LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
@@ -401,6 +402,7 @@
 STRIP = @STRIP@
 USE_NLS = @USE_NLS@
 VERSION = @VERSION@
+WEXTRA = @WEXTRA@
 XGETTEXT = @XGETTEXT@
 XGETTEXT_015 = @XGETTEXT_015@
 XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
@@ -461,8 +463,8 @@
 zip_LIBS = @zip_LIBS@
 INCLUDES = -I. -I$(srcdir) -I$(top_srcdir)/lib -I.. $(am__append_2)
 AM_CFLAGS = -std=gnu99 -Wall -Wshadow $(if \
-	$($(*F)_no_Werror),,-Werror) $(if \
-	$($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
+	$($(*F)_no_Werror),,) $(if \
+	$($(*F)_no_Wunused),,-Wunused $(WEXTRA)) $(if \
 	$($(*F)_no_Wformat),-Wno-format,-Wformat=2) $($(*F)_CFLAGS) \
 	$(am__append_1)
 @MUDFLAP_FALSE@libmudflap = 
diff --git a/tests/line2addr.c b/tests/line2addr.c
--- a/tests/line2addr.c
+++ b/tests/line2addr.c
@@ -132,7 +132,7 @@
     {
       struct args a = { .arg = argv[cnt] };
 
-      switch (sscanf (a.arg, "%m[^:]:%d", &a.file, &a.line))
+      switch (sscanf (a.arg, "%a[^:]:%d", &a.file, &a.line))
 	{
 	default:
 	case 0:
